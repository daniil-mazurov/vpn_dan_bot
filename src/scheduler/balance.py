import logging
import os
import pickle
from datetime import datetime, timedelta, timezone

from aiogram import Bot

from core.config import decr_time, noticed_time
from core.exceptions import DatabaseError
from db.models import UserActivity
from db.utils import get_valid_users, raise_money
from kb import static_balance_button
from text import get_end_sub

logger = logging.getLogger("apscheduler")
logging.getLogger("apscheduler.executors.default").setLevel(logging.WARNING)


def check_time(timefile: str):
    last_updated = datetime.today()

    if os.path.isfile(timefile) and os.path.getsize(timefile) > 0:
        with open(timefile, "rb") as file:
            prev_updated: datetime = pickle.load(file)

        diff = last_updated - prev_updated

    else:
        diff = last_updated - last_updated

    if diff > timedelta(days=1):
        return True
    return False


def increment_time(timefile: str):
    with open(timefile, "rb+") as file:
        prev_updated: datetime = pickle.load(file)
        file.seek(0)
        pickle.dump(prev_updated + timedelta(days=1), file)


async def balance_decrement():
    try:
        if check_time(decr_time):
            await raise_money()
            logger.info("–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —Å–ø–∏—Å–∞–Ω–∏–µ")

            increment_time(decr_time)
    except DatabaseError:
        logger.exception(
            "–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏–∏ –¥–µ–∫—Ä–µ–º–µ–Ω—Ç–∞ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        )


async def users_notice(bot: Bot):
    try:
        if check_time(noticed_time):
            users = await get_valid_users(0)

            for user in users:
                end = get_end_sub(user)

                diff = datetime.now(timezone.utc) - user.updated

                if user.active == UserActivity.inactive:
                    if (timedelta(days=1) < diff < timedelta(days=2)) or (
                        timedelta(days=3) < diff < timedelta(days=4)
                        or (timedelta(days=7) < diff < timedelta(days=8))
                    ):
                        await bot.send_message(
                            user.telegram_id,
                            "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –æ–¥–Ω–∞–∫–æ –µ—Å–ª–∏ –≤—ã –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å, —Ç–æ —Å–Ω–æ–≤–∞ —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º–∏!",
                            reply_markup=static_balance_button,
                        )

                        logger.info(
                            "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ —Å–µ—Ä–≤–∏—Å",
                            extra={"user_id": user.telegram_id, "trigger": diff},
                        )

                elif end == 0:  # TODO twice executed
                    await bot.send_message(
                        user.telegram_id,
                        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å, –∏–Ω–∞—á–µ –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –≤—ã –±—É–¥–µ—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã.",
                        reply_markup=static_balance_button,
                    )

                    logger.info(
                        "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ",
                        extra={"user_id": user.telegram_id, "end": end},
                    )
                elif end <= 2:
                    await bot.send_message(
                        user.telegram_id,
                        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –≤–∞—à–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–∫–æ–Ω—á–∞—Ç—Å—è."
                        "–ü–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ —ç—Ç–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—É–¥–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Å–∏—Å—Ç–µ–º–æ–π (–ø–æ–∫–∞ –≤—ã —Å–Ω–æ–≤–∞ –Ω–µ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å üôÑ)",
                        reply_markup=static_balance_button,
                    )

                    logger.info(
                        "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–∫–æ—Ä–æ–π –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ",
                        extra={"user_id": user.telegram_id, "end": end},
                    )

            increment_time(noticed_time)

    except DatabaseError:
        logger.exception(
            "–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏–∏ –¥–µ–∫—Ä–µ–º–µ–Ω—Ç–∞ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        )
